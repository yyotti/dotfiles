# C-jにしてる人が多いけど、C-jはskkとかぶるのでC-yにする
set-option -g prefix C-y
unbind-key C-b

# キーストロークのディレイを0にする
# Escキーの反応が速くなるのでVimが快適になる
set-option -sg escape-time 0

# 設定ファイルをリロードする
bind r source-file $XDG_CONFIG_HOME/tmux/tmux.conf \; display-message "Reloaded!"

# 基本の色設定
set-option -g default-terminal "screen-256color"
set-option -g terminal-overrides 'xterm:colors=256'

# I love Vim.
set-window-option -g mode-keys vi

# ウィンドウやペインの番号は1からにする
# 画面表示とキーの並びが揃うほうが直感的
set-option -g base-index 1
set-option -g pane-base-index 1

# aptのzshはglobalのzshrcでcompinitしていてそれが遅いので抑止
skip_global_compinit=1
if "test -n ${SHELL}" "set-option -g default-shell ${SHELL}"

# 分割
bind-key | split-window -hc "#{pane_current_path}"
bind-key - split-window -vc "#{pane_current_path}"

# 非アクティブなペインは白くする
set-option -g window-style 'bg=colour235'
set-option -g window-active-style 'bg=colour232'

# ペイン移動
bind-key h select-pane -L
bind-key l select-pane -R
bind-key k select-pane -U
bind-key j select-pane -D
bind -r C-h select-pane -L
bind -r C-l select-pane -R

# クリップボードを共有
#if "test `which xsel`" "bind-key -T vi-copy Enter copy-pipe 'cat | xsel -i --clipboard'"

# ペインサイズを変更
bind-key -r H resize-pane -L 5
bind-key -r J resize-pane -D 5
bind-key -r K resize-pane -U 5
bind-key -r L resize-pane -R 5

# ネスト対策
bind-key a send-prefix

# 出力をVimで開く
bind-key e run-shell "${DOTFILES}/scripts/bin/tmux-vim"

# powerline
run-shell "tmux set-environment -g POWERLINE_CONF $(pip3 show powerline-status | command grep -E '^Location: ' | sed -e 's/^Location: //')/powerline/bindings/tmux/powerline.conf"
if 'test `which powerline-daemon` -a -f ${POWERLINE_CONF}' 'source "${XDG_CONFIG_HOME}/tmux/powerline.conf"'
