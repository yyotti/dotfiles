#!/usr/bin/env bash
set -euC
trap 'on-error $LINENO "$@"' ERR

usage() # {{{
{
  cat <<_EOM_ >&${1:-1}
Usage: git ignore [OPTIONS] IGNORES...

Options:
  -h, --help            Show this message.
  -v, --verbose         Show verbose message.
  -A, --absolute
_EOM_
}
# }}}

# Default options
verbose=false
absolute=false

# Global variables
readonly script_dir="$(cd "$(dirname "$(readlink "${BASH_SOURCE:-$0}" || echo "${BASH_SOURCE:-$0}")")" && pwd -P)"

source "${script_dir}/../_helpers.sh"

if repo=$(command git rev-parse --show-toplevel 2>/dev/null); [[ $? != 0 || $repo == '' ]]; then
  echoe 'Not in git repository.' >&2
  exit 1
fi

# Parse options {{{
args=()
for _opt in "$@"; do
  case "$_opt" in
    -h|--help)
      usage
      exit 0
      ;;
    -v|--verbose)
      verbose=true
      shift 1
      ;;
    -A|--absolute)
      absolute=true
      shift 1
      ;;
    -*)
      echoe "Unknown option: $_opt"
      usage 2
      exit 1
      ;;
    *)
      if [[ $1 != '' ]]; then
        args+=( "$1" )
        shift 1
      fi
      ;;
  esac
done
# }}}

if [[ ${#args[@]} == 0 ]]; then
  echoe 'No ignore files specified.'
  usage 2
  exit 1
fi

dot_gitignore="${repo}/.gitignore"
for f in "${args[@]}"; do
  if $absolute; then
    if [[ $f =~ ^[^/] ]]; then
      f="/$f"
    fi
  fi
  if $verbose; then
    echo "Add '$f' to $dot_gitignore."
  fi
  echo "$f" >>"${dot_gitignore}"
done
