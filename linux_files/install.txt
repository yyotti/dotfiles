Linux Mint 17.1 のインストールと設定

●インストール
Live CD (もしくは USB) から起動し、デスクトップにあるインストールアイコンで
インストーラ起動。
ウィザードに従って設定していく。
・ブートローダを Windows のものにしないなら、「Windows と別にインストールす
る」的なオプションを選択すれば OK
・キーボードは英語で

＜インストール完了後すぐにやること＞
ターミナルで
$ LANG=C xdg-user-dirs-gtk-update
を打って、ディレクトリ名を英語に変更し一度再起動。
再起動後に再度ディレクトリ名を聞くダイアログが出るかもしれないので、古いままを
選択して二度と聞かない設定にしておく。
起動したら、メニュー→システム管理→アップデートマネージャである限りアップデー
トしておく。

●無線LANドライバのコンパイル・インストール
※最初は完全にネットにつながらないので、あらかじめ別ディスク上にソースをclone
しておく。
※Mintのバージョンが上がれば、そのうち不溶になるかもしれない
TODO 記述

●Mozcインストール・設定
Synapticパッケージマネージャで「fcitx-mozc」で検索。
fcitx-mozcをインストールする。
インストールしたら一度再起動し、タスクトレイのキーボードアイコンのメニューで
「設定」を表示。「入力メソッド」タブで「Mozc」が選択されているのを確認したら、
「全体の設定」タブの「入力メソッドのオンオフ」を「Alt+`」だけにしておく。（2つ
あるが、もう1方はボタンを押してEscすれば「空」と表示される）
「入力メソッドの切換をホットキーで」のチェックは外す。

●Chromeインストール
Chromeはパッケージマネージャには無いので、
https://www.google.com/intl/ja/chrome/browser/
にアクセスしてDebian/Ubuntuパッケージをダウンロードしてくる。あとはアイコンダ
ブルクリックでインストールする。

●Rictyフォントインストール
https://github.com/yascentur/Ricty
を見ながらインストール。

●ターミナルのフォント設定
ターミナルの「編集」→「プロファイル」で、デフォルトプロファイルの使用フォントを
Rictyに変更する。
また、デフォルトサイズを160列48行に設定。
※ついでにMozcの設定でRictyを指定してもいいかもしれない

●ターミナルの色設定
Synapticパッケージマネージャで dconf-cli と dconf-editor をインストールする。
その後、あらかじめターミナルで適当な名前のプロファイルを作っておき、
$ mkdir ~/.soralized
$ cd ~/.soralized
$ git clone git://github.com/NeuralSandwich/mate-terminal-colors-solarized.git
$ cd mate-terminal-colors-solarized
$ ./install.h
プロファイルを変更して完了。

●Kaoriya-Vim インストール
まず必要なパッケージのインストール。
$ sudo apt-get mercurial libncurses5-dev libgtk2.0-dev xorg-dev

mercurialのmq extensionを使うために、~/.hgrcを作成して下記を記述。
[ui]
name = tsutsui
[extensions]
mq=

TODO 他にLuaなどが必要だが、↓のconfigureオプションも含めてWin版と同じにしたい
ので、要調査

リポジトリからソースを取得、このときkaoriyaパッチも同時に取得する。
$ mkdir ~/vim_src
$ cd ~/vim_src
$ hg qclone https://vim.googlecode.com/hg ./vim \
> -p https://bitbucket.org/koron/vim-kaoriya-patches
$ cd vim

ソースとパッチのバージョンを合わせるため、
$ hg log --mq | less
でパッチのログを、
$ hg log | less
や
$ hg tags | less
でソースのログを見て、なるべくバージョンを合わせる。
バージョンが特定できたら、
$ hg update v7-4-648
などでソースのリビジョンを変更、
$ hg update ab23aa --mq
などでパッチのリビジョンを変更する。

パッチを当てる。
$hq qpush -a
このとき、バージョンがバッチリ合ってないといくつかのパッチは失敗するかもしれな
いが、中身を見て何とか調整する。

あとはconfigureしてmakeする。
$ ./configure \
--enable-gui=gtk2 \
--disable-darwin \
--disable-selinux \
--enable-perlinterp=yes \
--enable-pythoninterp=yes \
--enable-python3interp=yes \
--enable-rubyinterp=yes \
--enable-luainterp=yes \
--enable-cscope \
--disable-netbeans \
--enable-multibyte \
--enable-xim \
--enable-fontset \
--with-features=huge \
--with-compiledby="Yosuke Tsutsui <yosuke.tsutsui [at] gmail.com>" \
--with-tlib=ncurses \
--enable-fail-if-missing \
--with-lua-prefix=/usr \
--with-luajit
$ make -j 4
$ sudo make install
※--prefixを指定していないので、/usr/local にインストールされる。
/usr/local/bin/vim
/usr/local/share/vim/*

kaoriyaプラグインなどをコピーする。
香り屋さんのページからWin向けのVimアーカイブをダウンロード、解凍して、ディレク
トリ移動したら下記のコマンドで必要ファイルをコピーする。
$ sudo mv /usr/local/share/vim/vim74 /usr/local/share/vim/vim74_org
$ sudo mv vim74/ vimrc gvimrc switches plugins origdoc /usr/local/share/vim/
$ sudo mv vim74/ vimrc gvimrc switches plugins origdoc /usr/local/share/vim/
$ cd /usr/local/share/vim/switches/enabled/
$ ln -s /usr/local/share/vim/switches/catalog/utf-8.vim
※まだこの時点でVimを起動しちゃダメ

●Gitインストール
パッケージマネージャやapt-getでgitをインストールする

●vim設定
githubからcloneしてshを叩くだけ
$ mkdir ~/git
$ cd ~/git
$ git clone https://github.com/YosukeTsutsui/vimfiles.git
$ sh vimfiles/vimrc_install.sh
この後、Vimを起動して、プラグインのインストール等を行う。最初は solarized あた
りでエラーが出るかもしれない。インストールが終わったらいったんVimを終了して、
再度起動してみる。エラーは出ないはず。

●bashrc設定
githubからcloneしてshを叩くだけ
$ cd ~/git
$ git clone https://github.com/YosukeTsutsui/linux_files.git
$ sh linux_files/dotinstall.sh
$ source ~/.bashrc

●Puttyインストール
Synapticパッケージマネージャで「putty」で検索。
「putty」をインストールする。
できればどこかに設定を共有できる仕組みを作りたいところ。

●FileZillaインストール
Synapticパッケージマネージャで「filezilla」で検索。
できればどこかに設定を共有できる仕組みを作りたいところ。

●Synapseインストール
Synapticパッケージマネージャで「設定」→「リポジトリ」で「ソフトウェアソース」
が開くので、
ppa:noobslab/apps
を追加する。
Synapticパッケージマネージャで「再読込」を押してリポジトリの追加を反映すると、
「Synapse」で検索すると出てくるようになるので、インストールする。

●JDK7をインストール
まずプリインストールされているJavaを削除する
$ sudo apt-get purge openjdk-\*
OracleサイトなどからJDK7をダウンロードする。rpmではなくtar.gzをダウンロードすること。
$ cd /tmp
$ mkdir -p ~/opt/jdk
$ tar zxvf ~/Downloads/jdk-7u75-linux-i586.tar.gz
$ mv jdk1.7.0_75/ ~/opt/jdk/
コマンド群をパス無しで実行できるように設定する。
（一般的には ~/.profile にパスを通すらしいが）
$ sudo update-alternatives --install /usr/bin/java java ~/opt/jdk/jdk1.7.0_75/bin/java 10
$ sudo update-alternatives --install /usr/bin/javac javac ~/opt/jdk/jdk1.7.0_75/bin/javac 10
$ sudo update-alternatives --install /usr/bin/javaws javaws ~/opt/jdk/jdk1.7.0_75/bin/javaws 10
複数バージョンのJDKをインストールした場合、使用するコマンドを選択する。
$ sudo update-alternatives --config java
$ sudo update-alternatives --config javac
$ sudo update-alternatives --config javaws

==== ここより下は古い。整理しなければ。 ====

●Dropboxインストール
Dropboxのページから、Ubuntu用インストーラをダウンロードし、インストール。
Synapticパッケージマネージャで「dropbox」で検索。
「caja-dropbox」をインストール。
ターミナルで
dropbox start -i
でデーモンをインストール。
あとはウィザードに従って設定。

●設定ファイルをDropboxから移す
##### 手順を書く #####

●RabbitVCSインストール
http://vavai.net/2012/10/solved-rabbitvcs-subversion-menu-on-nautiluscaja-linuxmint-13-maya/
を見ながらインストール。
一応、コマンドを載せておく。
cd /tmp
sudo add-apt-repository ppa:rabbitvcs/ppa
sudo apt-get update
sudo apt-get install rabbitvcs-nautilus3 python-caja rabbitvcs-core
wget http://www.excellent.co.id/wp-content/uploads/2012/10/rabbit-caja.tar.gz
tar xvzf rabbit-caja.tar.gz
sudo cp caja* /usr/lib/pymodules/python2.7/rabbitvcs/util/
sudo mkdir -p /usr/lib/caja/extensions-2.0/python/
sudo cp RabbitVCS.py /usr/lib/caja/extensions-2.0/phthon/
※ログアウト/ログインするとコンテキストメニューにRabbitVCSのメニューが追加されている。

●Android SDK インストール
##### 手順を書く #####

●Scala インストール
##### 手順を書く #####

●Play Framework インストール
##### 手順を書く #####

●バックアップ設定
##### 手順を書く #####

