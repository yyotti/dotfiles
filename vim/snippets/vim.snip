snippet     marker
abbr        " xxx "{{{ ... "}}}
options     head
  " ${1:#:block_name} "{{{
  ${0:TARGET}
  "}}}

snippet     title
abbr        " Title:
options     head
  "-----------------------------------------------------------------------------
  " ${1:#:Title}:
  "
  ${0}

snippet modeline
abbr    " vim: {modeline}
    " vim: foldmethod=marker:${0}

snippet     fileinfo
abbr        FILE: [filename]   AUTHOR: Y.Tsutsui
options     head
  "=============================================================================
  " FILE: ${1:`fnamemodify(expand('%'), ':t')`}
  " AUTHOR: Y.Tsutsui
  "=============================================================================
  ${0}

snippet  save_cpoptions
abbr     let s:save_cpo = &cpoptions | set cpoptions&vim
alias    s:save_cpo cpoptions
options     head
  let s:save_cpo = &cpoptions
  set cpoptions&vim

  ${0:TARGET}

  let &cpoptions = s:save_cpo
  unlet s:save_cpo

snippet     function
abbr        func endfunc
alias       func
options     head
    function! ${1:#:func_name}(${2}) abort "{{{
      ${0:TARGET}
    endfunction "}}}

snippet     autoload
abbr        autoload func endfunc
alias       afunction afunc
options     head
    function! `substitute(matchstr(neosnippet#util#expand('%:p:r'), '/autoload/\zs.*$'), '/', '#', 'g')`#${1:#:func_name}(${2:#:args}) abort "{{{
      ${0}
    endfunction "}}}
